project(TG01_Code)
cmake_minimum_required(VERSION 3.16 FATAL_ERROR)
#new
SET(GCC_COVERAGE_COMPILE_FLAGS "-Wl,--no-undefined")
SET(GCC_COVERAGE_LINK_FLAGS    "")
SET(CMAKE_CXX_FLAGS  "${CMAKE_CXX_FLAGS} ${GCC_COVERAGE_COMPILE_FLAGS}")
SET(CMAKE_EXE_LINKER_FLAGS  "${CMAKE_EXE_LINKER_FLAGS} ${GCC_COVERAGE_LINK_FLAGS}")
#set(CMAKE_CXX_FLAGS_RELEASE "-O1")
#######
FIND_PACKAGE(PythonInterp)
find_package(CGAL)
Set( CMAKE_BUILD_TYPE "Release" )
if (PYTHONINTERP_FOUND)
    if (UNIX AND NOT APPLE)
        if (PYTHON_VERSION_MAJOR EQUAL 3)
            FIND_PACKAGE(Boost COMPONENTS python${PYTHON_VERSION_SUFFIX})
            FIND_PACKAGE(PythonInterp 3)
            FIND_PACKAGE(PythonLibs 3 REQUIRED)
        else()
            FIND_PACKAGE(Boost COMPONENTS python)
            FIND_PACKAGE(PythonInterp)
            FIND_PACKAGE(PythonLibs REQUIRED)
        endif()
    else()
        if (PYTHON_VERSION_MAJOR EQUAL 3)
            FIND_PACKAGE(Boost COMPONENTS python${PYTHON_VERSION_MAJOR}${PYTHON_VERSION_MINOR})
            FIND_PACKAGE(PythonInterp 3)
            FIND_PACKAGE(PythonLibs 3 REQUIRED)
        else()
            FIND_PACKAGE(Boost COMPONENTS python${PYTHON_VERSION_MAJOR}${PYTHON_VERSION_MINOR})
            FIND_PACKAGE(PythonInterp)
            FIND_PACKAGE(PythonLibs REQUIRED)
        endif()
    endif()
else()
    message("Python not found")
endif()

message(STATUS "PYTHON_LIBRARIES = ${PYTHON_LIBRARIES}")
message(STATUS "PYTHON_EXECUTABLE = ${PYTHON_EXECUTABLE}")
message(STATUS "PYTHON_INCLUDE_DIRS = ${PYTHON_INCLUDE_DIRS}")
message(STATUS "Boost_LIBRARIES = ${Boost_LIBRARIES}")

ENABLE_TESTING()
INCLUDE_DIRECTORIES(${Boost_INCLUDE_DIRS} ${PYTHON_INCLUDE_DIRS})
LINK_LIBRARIES(${Boost_LIBRARIES} ${PYTHON_LIBRARIES}) # Deprecated but so convenient!

PYTHON_ADD_MODULE(TG01_Code library.cpp library.h)
target_link_libraries(TG01_Code PRIVATE CGAL::CGAL)

ADD_SUBDIRECTORY(CGAL_Setup)
target_link_libraries (TG01_Code INTERFACE CGAL_Setup)
ADD_SUBDIRECTORY(Cad_Data)

target_link_libraries (TG01_Code LINK_PUBLIC Cad_Data)
ADD_SUBDIRECTORY(CGAL_helpers)
target_link_libraries (TG01_Code LINK_PUBLIC CGAL_helpers)

ADD_SUBDIRECTORY(Genes_helpers)
target_link_libraries (TG01_Code LINK_PUBLIC Genes_helpers)

ADD_SUBDIRECTORY(Genetic)
target_link_libraries (TG01_Code LINK_PUBLIC Genetic)